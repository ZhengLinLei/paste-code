class Terminal{#e;#t=[];help='\n        <div>\n            <pre>\n<span class="token comment">-----------------------------</span>\n    <span class="class-name token">Commands:</span>\n        - window [add | remove] [:int]\n            usage:\n                window add 3\n        \n        - terminal [close | open]\n            usage:\n                terminal close\n        \n        - terminal [color | bg] [set | get | reset] [:hex | :rgb | :hsl]    (not implemented)\n            usage:\n                terminal color set #fff\n        \n        - config [set | get | reset]\n            usage:\n                config get\n\n        - font [set | get | reset] [:int]\n            usage:\n                font set +3\n\n        - theme [set | get | reset | list] [:string]\n            usage:\n                theme set dark\n\n        - run [:int (windows: 0-3, default: 0)]\n            usage:\n                run 1\n\n        - execute [:int (windows: 0-3, default: 0)]\n            usage:\n                execute 0\n\n        - cls\n    \n        - exit\n    \n        - help\n    \n    <span class="class-name token">More info:</span>\n        <a href="https://github.com/ZhengLinLei/paste-code">https://github.com/ZhengLinLei/paste-code</a>\n    \n    <span class="class-name token">Issues:</span>\n        <a href="https://github.com/ZhengLinLei/paste-code/issues">https://github.com/ZhengLinLei/paste-code/issues</a>\n    \n    <span class="class-name token">Author:</span>\n        <a href="https://github.com/ZhengLinLei">Zheng Lin Lei</a>\n<span class="token comment">-----------------------------</span>\n            </pre>\n        </div>\n    ';executer={python:"https://pyscript.net/latest/pyscript.js",javascript:"./js/min/executer/executer.min.js",typescript:"https://unpkg.com/typescript@latest/lib/typescriptServices.js",brainfuck:"./js/min/executer/brainfuck.min.js",php:"./js/src/executer/php.js",java:"https://unpkg.com/java-to-javascript@latest/build/java-to-javascript.min.js"};constructor(e){this.#e=e}commands={window:["add","remove"],terminal:["close","open"],cls:0,exit:0,help:0,config:["set","get","reset"],font:["set","get","reset"],theme:["set","get","reset","list"],run:0,execute:0,a:0,yes:0};exec=e=>new Promise((t=>{let n=e.split(" ");this.#t.push(e),Object.keys(this.commands).includes(n[0])&&((0==this.commands[n[0]]||this.commands[n[0]].includes(n[1]))&&t(this.execution[n[0]](n)),t([0,`Path "${n[1]}" not found`])),t([0,`Command "${n[0]}" not found`])}));execution={terminal:e=>(this.#e.terminal.toggleFnc(e[1]),[1,""]),window:e=>{let t=0;if(e.length>2){if(!parseInt(e[2]))return[0,`Invalid argument ${e[2]}`];t=parseInt(e[2])}else t=1;for(let n=0;n<t;n++)"add"==e[1]?this.#e.window.add():this.#e.window.remove();return[1,""]},exit:()=>(this.#e.terminal.toggleFnc("close"),[1,""]),cls:()=>(this.#e.terminal.output.innerHTML="",this.#e.terminal.caret.style.transform="translateX(0px)",this.#e.terminal.config.position=0,[1,""]),help:()=>[1,this.help],config:e=>{let t={},n=[1,'\n                <br>\n                <div>\n                    <span>Reload required <a href="javascript:location.reload()">[yes]</a><a>[no]</a></span>\n                </div>\n                <br>\n                '];switch(e[1]){case"set":t=JSON.parse(e.slice(2).join("")),Object.entries(t).forEach((([e,t])=>{"undefined"!==t&&"null"!==t&&"NaN"!==t||(n=[0,`Invalid value ${t}`]),"default"!=t?localStorage.setItem(e,t):localStorage.removeItem(e)}));break;case"get":t={terminal:localStorage.getItem("terminal")||!1,terminalHeight:localStorage.getItem("terminalHeight")||"default",terminalOptWidth:localStorage.getItem("terminalOptWidth")||"default",fontSize:localStorage.getItem("fontSize")||"default",theme:localStorage.getItem("theme")||"default"},n=[1,`\n                        <br>\n                        <div>\n                            <pre><code class="language-json">${Prism.highlight(JSON.stringify(t,null,4).trim(),Prism.languages.json,"json")}</code></pre>\n                        </div>\n                        <div>\n                            <span>config set ${JSON.stringify(t)}</span>\n                        </div>\n                        <br>\n                        `];break;case"reset":localStorage.clear()}return n},font:e=>{let t=[1,""],n=document.documentElement||document.querySelector(":root"),a=parseInt(window.getComputedStyle(n,null).getPropertyValue("font-size").replace("px",""));switch(e[1]){case"set":if(e[2].match(/[-+]/)){a=a+parseInt(e[2])}else a=parseInt(e[2]);break;case"get":t=[1,`<br><div><span>Font size: <span class="token comment">${a}px</span></span></div><br>`];break;case"reset":a=12}return"get"!=e[1]&&n.style.setProperty("--font-size",`${a}px`),localStorage.setItem("fontSize",a),t},theme:e=>{let t=[1,""];switch(e[1]){case"set":this.#e.theme.list.includes(e[2])?this.#e.theme.set(e[2]):t=[0,`Theme "${e[2]}" not found`];break;case"get":t=[1,`<div><span>Current theme: <span class="token comment">${localStorage.getItem("theme")||this.#e.theme.list[0]}</span></span></div>`];break;case"reset":this.#e.theme.set("light");break;case"list":t=[1,`<div><span>Theme list: <span class="token comment">${this.#e.theme.list.join(", ")}</span></span><p>See <a href="https://github.com/ZhengLinLei/paste-code/blob/main/THEME.md">https://github.com/ZhengLinLei/paste-code/blob/main/THEME.md</a> to customise themes.</div>`]}return t},run:e=>{if(e.length>=2&&"list"==e[1])return[1,`<div><span>Executer supported languages: <span class="token comment">${Object.keys(this.executer).join(", ")}</span></span></div><br>`];let t=[0,'\n                <div>\n                    <span>Language not found.</span>\n                </div>\n                <div>\n                    <span>Example: <span class="token comment">!PY</span>, <span class="token comment">!TS</span>, <span class="token comment">!JAVASCRIPT</span></span>\n                </div>\n                <br>\n                <div>See <a href="https://github.com/ZhengLinLei/paste-code/blob/main/EXECUTER.md">https://github.com/ZhengLinLei/paste-code/blob/main/EXECUTER.md</a> for more information.</div>\n            '],n=e[1]||0,a=this.#e.window.config.windows[n];if(!a)return[0,`Window ${n} not found`];let s=a.value,i=s.split("\n"),r=this.#e.window.getLang(a);if(!1===r)return t;let o=Object.entries({python:["python","py"],javascript:["javascript","js"],typescript:["typescript","ts"],brainfuck:["brainfuck","bf"],php:["php"],java:["java"]}).find((([e,t])=>t.includes(r)));if(!o)return[0,`Language "${r}" not executable. See <a href="https://github.com/ZhengLinLei/paste-code/blob/main/EXECUTER.md">https://github.com/ZhengLinLei/paste-code/blob/main/EXECUTER.md</a> for more information.`];o=o[0];let c=this.executer[o],l=document.querySelector(`script[src="${c}"]`);l||(l=document.createElement("script"),l.setAttribute("defer","true"),l.src=c,document.body.appendChild(l));let p=`b${Math.random().toString(36).substring(7)}b`;function u(){document.querySelector(`#${p}`).innerHTML=""}function h(e){document.querySelector(`#${p}`).innerHTML+=e}switch(TMP_ID=p,this.#e.terminal.output.innerHTML+=`<div id="${p}">Loading executer...</div>`,s=i.slice(1).join("\n"),o){case"python":function d(e){let t=document.createElement("py-script");t.style.opacity=0,t.innerHTML=`\n                        from js import Out\n\n                        ${s}\n                        `,e.#e.terminal.output.appendChild(t),u()}s=s.replace(/print\(/g,"Out("),"undefined"==typeof pyscript?l.onload=()=>{d(this)}:d(this);break;case"javascript":s=s.replace(/console.log\(/g,"Out("),u(),new JSexecuter(s).run();break;case"typescript":function m(){u();try{let e=window.ts.transpile(s);new JSexecuter(e).run()}catch(e){return h(`<span class="token title important">Error TS</span>: ${e}`),[0,"Error executing"]}}s=s.replace(/console.log\(/g,"Out("),window.ts?m():l.onload=m;break;case"brainfuck":let g=[],f=[];function b(){let e=new Brainfuck(new Infinite);u(),e.code.source(s),e.onOutput((function(e){g.push(String.fromCharCode(e)),f.push(e)})),e.run((()=>{let e="\n                            <style>\n                            td{\n                                text-align: center;\n                                padding-right: 10px;\n                            }\n                            </style>\n                            <table>\n                                <tr>\n                            ";g.forEach((t=>e+=`<td>${t}</td>`)),e+="\n                                </tr>\n                                <tr>\n                            ",f.forEach((t=>e+=`<td><span class="token comment">${t}</span></td>`)),e+="\n                                </tr>\n                            </table>\n                            ",Out(e),Out(g.join(""))}))}"undefined"==typeof Brainfuck?l.onload=b:b();break;case"php":const v=new URLSearchParams(window.location.search).entries();let y=[];for(const x of v)y.push(`"${x[0]}" => "${x[1]}"`);function w(){let e=new PHP(s).vm.OUTPUT_BUFFER;u(),Out(e)}s=s.replace("<?php",""),s=s.replace("?>",""),s=`<?php\n                        $_GET = [${y.join(", ")}];\n                    `+s+"\n                    ?>\n                    ","undefined"==typeof PHP?l.onload=w:w();break;case"java":function k(){u();try{let e=window.javaToJavascript(s);e+="\n                            if(typeof Main === 'function'){\n                                Main.main();\n                            }\n                            ",console.log(e),new JSexecuter(e).run()}catch(e){return h(`<span class="token title important">Error Java</span>: ${e}`),[0,"Error executing"]}}s=s.replace(/System.out.println\(/g,"Out("),void 0===window.javaToJavascript?l.onload=k:k()}return[1,""]},execute:e=>{if(e.length>1&&e[1].includes("alert"))return e[1].includes("disable")?localStorage.setItem("disableAlertExec",!0):localStorage.removeItem("disableAlertExec"),[1,'\n                <br>\n                <div>\n                    <span>Alert <span class="token title important">warning</span> updated</span>\n                </div>\n                <div>\n                    <span class="token comment">Disable it with <span class="token operator">execute disable-alert</span>.<br> Or enable it with <span class="token operator">execute enable-alert</span></span>\n                </div>\n                <br>\n                '];{if("undefined"==typeof JSexecuter){let t=document.createElement("script");return t.setAttribute("defer","true"),t.src=this.executer.javascript,document.body.appendChild(t),[0,`Execution failed due: Script loading...; Please execute again <a>${e.join(" ")}</a>`]}let t=e[1]||0,n=this.#e.window.config.windows[t];if(!n)return[0,`Window ${t} not found`];let a=`\n                    function runModule(){\n                        ${n.value}\n\n                        return "Script Loaded";\n                    }\n                `;return new JSexecuter(a).run(),localStorage.getItem("disableAlertExec")?[1,`\n                <span class="comment token">${runModule()}</span>\n                `]:[1,'\n                        <br>\n                        <div>\n                            <span>This action could be dangerous. Are you sure you want to execute it? <a href="javascript:runModule()">[yes]</a><a>[no]</a></span>\n                        </div>\n                        <div>\n                            <span class="token comment">By the way you can disable this alert with <span class="token operator">execute disable-alert</span>.<br> Or enable it with <span class="token operator">execute enable-alert</span></span>\n                        </div>\n                        <br>\n                    ']}},a:()=>{!function(){document.body.innerHTML="";let e=document.createElement("video");e.style.width="100vw",e.style.height="100vh",e.style.objectFit="cover",e.src="https://shattereddisk.github.io/rickroll/rickroll.mp4",e.autoplay=!0,e.loop=!0,document.body.appendChild(e)}()},yes:e=>{let t=0,n=setInterval((()=>{this.#e.terminal.output.innerHTML+=`y - ${t}<br>`,this.#e.terminal.main.scrollTop=this.#e.terminal.main.scrollHeight,t++}),parseInt(e[1])||1),a=e=>{(e.altKey&&"c"==e.key||"Escape"==e.key||e.altKey&&"©"==e.key)&&(e.preventDefault(),clearInterval(n),this.#e.terminal.output.innerHTML+="testing cancelled [Alt + C]<br>",document.removeEventListener("keydown",a))};return document.addEventListener("keydown",a),[1,""]}};getHistory(){return this.#t}}