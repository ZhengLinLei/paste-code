class Terminal{#n;#e=[];help='\n        <div>\n            <pre>\n<span class="token comment">-----------------------------</span>\n    <span class="class-name token">Commands:</span>\n        - window <add | remove> [:int]\n            usage:\n                window add 3\n        \n        - terminal <close | open>\n            usage:\n                terminal close\n        \n        - cls\n    \n        - exit\n    \n        - ?help\n    \n    <span class="class-name token">More info:</span>\n        <a href="https://github.com/ZhengLinLei/paste-code">https://github.com/ZhengLinLei/paste-code</a>\n    \n    <span class="class-name token">Issues:</span>\n        <a href="https://github.com/ZhengLinLei/paste-code/issues">https://github.com/ZhengLinLei/paste-code/issues</a>\n    \n    <span class="class-name token">Author:</span>\n        <a href="https://github.com/ZhengLinLei">Zheng Lin Lei</a>\n<span class="token comment">-----------------------------</span>\n            </pre>\n        </div>\n    ';constructor(n){this.#n=n}commands={window:["add","remove"],terminal:["close","open"],cls:0,exit:0,"?help":0,reset:0};exec=n=>new Promise((e=>{let s=n.split(" ");this.#e.push(n),Object.keys(this.commands).includes(s[0])&&((0==this.commands[s[0]]||this.commands[s[0]].includes(s[1]))&&e(this.execution[s[0]](s)),e([0,`Path "${s[1]}" not found`])),e([0,`Command "${s[0]}" not found`])}));execution={terminal:n=>(this.#n.terminal.toggleFnc(n[1]),[1,""]),window:n=>{let e=0;if(n.length>2){if(!parseInt(n[2]))return[0,`Invalid argument ${n[2]}`];e=parseInt(n[2])}else e=1;for(let s=0;s<e;s++)"add"==n[1]?this.#n.window.add():this.#n.window.remove();return[1,""]},exit:()=>(this.#n.terminal.toggleFnc("close"),[1,""]),cls:()=>(this.#n.terminal.output.innerHTML="",[1,""]),"?help":()=>[1,this.help],reset:()=>(localStorage.clear(),[1,'\n                <div>\n                    <span>Reload required <a href="javascript:location.reload()">[yes]</a><a>[no]</a</span>\n                </div>\n                '])};getHistory(){return this.#e}}