let setTabSize=size=>{document.querySelectorAll(".textarea div pre code").forEach(textarea=>{textarea.style.tabSize=`${0!=size?size:4}`,textarea.style.MozTabSize=`${0!=size?size:4}`}),tabSize=size},tabSize=4;window.addEventListener("load",()=>{"true"===localStorage.getItem("dark")&&document.body.classList.add("dark");var lzma=new LZMA("./js/src/lzma_worker.js");const ROOT_url=document.location,WINDOW_CONFIG={parent:document.querySelector(".textarea"),max:4,min:1,label:"Window",current:0,windows:[],codeWindow:[],windows_value:[],lineActive:[]},_update_code=window=>{const index=WINDOW_CONFIG.windows.indexOf(window),codeWindow=WINDOW_CONFIG.codeWindow[index],_LINES=window.value.split("\n"),firstLine=_LINES[0];if(firstLine.includes("!")){let arr=firstLine.split("!");const language=arr[arr.length-1].toLowerCase();codeWindow.setAttribute("class",`language-${language}`)}codeWindow.innerHTML=window.value.replace(new RegExp("&","g"),"&amp;").replace(new RegExp("<","g"),"&lt;"),Prism.highlightElement(codeWindow),document.querySelector(`.w-${index}`).style.setProperty("--padd",_LINES.length>=100?_LINES.length>=1e3?_LINES.length>=1e4?"60px":"50px":"40px":"30px");const lineNumbers=window.parentElement.querySelector(".line-numbers-rows");lineNumbers.innerHTML=Array(_LINES.length).fill("<span></span>").join(""),window===document.activeElement&&_set_lines(window)},_set_lines=window=>{const index=window.value.substring(0,window.selectionStart).split("\n").length,lines=window.parentElement.querySelector(".line-numbers-rows");lines.children[index-1].classList.contains("current")||(_clear_lines(window),lines.children[index-1].classList.add("current"))},_clear_lines=window=>{const lines=window.parentElement.querySelector(".line-numbers-rows");Array.from(lines.children).forEach(line=>{line.classList.remove("current")})},addWindow=()=>{if(WINDOW_CONFIG.current<WINDOW_CONFIG.max){const windowParent=document.createElement("div"),codeWindow=document.createElement("pre");codeWindow.setAttribute("aria-hidden","true");const code=document.createElement("code"),lineNumbers=document.createElement("span");lineNumbers.setAttribute("aria-hidden","true"),lineNumbers.setAttribute("class","line-numbers-rows no-select"),lineNumbers.innerHTML="<span></span>";const newWindow=document.createElement("textarea");newWindow.setAttribute("class","textarea-main"),newWindow.setAttribute("spellcheck","false"),newWindow.setAttribute("outline","none"),newWindow.setAttribute("autocorrect","off"),newWindow.setAttribute("autocapitalize","off"),newWindow.setAttribute("aria-label","Paste Code"),newWindow.setAttribute("tabindex","0"),newWindow.addEventListener("input",()=>_update_code(newWindow)),newWindow.addEventListener("mouseup",()=>_set_lines(newWindow)),("ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0)&&newWindow.addEventListener("touchend",()=>_set_lines(newWindow)),newWindow.addEventListener("scroll",()=>{codeWindow.scrollTo(newWindow.scrollLeft,newWindow.scrollTop),lineNumbers.scrollTo(newWindow.scrollLeft,newWindow.scrollTop)}),newWindow.addEventListener("keydown",e=>{if("Tab"==e.key||9==e.keyCode||9==e.which){e.preventDefault();const start=newWindow.selectionStart;newWindow.value=newWindow.value.substring(0,start)+" ".repeat(tabSize)+newWindow.value.substring(newWindow.selectionEnd),newWindow.selectionStart=newWindow.selectionEnd=start+tabSize,_update_code(newWindow)}}),newWindow.addEventListener("keyup",e=>{"Enter"!=e.key&&13!=e.keyCode&&13!=e.which&&"ArrowUp"!=e.key&&38!=e.keyCode&&38!=e.which&&"ArrowDown"!=e.key&&40!=e.keyCode&&40!=e.which&&"ArrowLeft"!=e.key&&37!=e.keyCode&&37!=e.which&&"ArrowRight"!=e.key&&39!=e.keyCode&&39!=e.which||_set_lines(newWindow)}),newWindow.addEventListener("focusout",()=>{_clear_lines(newWindow)}),codeWindow.appendChild(code),windowParent.appendChild(lineNumbers),windowParent.appendChild(newWindow),windowParent.appendChild(codeWindow),WINDOW_CONFIG.parent.appendChild(windowParent),WINDOW_CONFIG.windows.push(newWindow),WINDOW_CONFIG.current++,WINDOW_CONFIG.codeWindow.push(code),windowParent.classList.add(`w-${WINDOW_CONFIG.current-1}`)}},closeOffer=()=>document.querySelector("body > footer").classList.remove("text-offer"),__main__=()=>{const invert=document.querySelector(".invert-color");invert.addEventListener("click",()=>{document.body.classList.toggle("dark"),document.body.classList.contains("dark")?localStorage.setItem("dark",!0):localStorage.setItem("dark",!1)}),0==WINDOW_CONFIG.current&&addWindow(),document.querySelector("#add-w").addEventListener("click",addWindow),document.querySelector("#remove-w").addEventListener("click",()=>{WINDOW_CONFIG.current>WINDOW_CONFIG.min&&(WINDOW_CONFIG.parent.removeChild(WINDOW_CONFIG.windows[WINDOW_CONFIG.windows.length-1].parentElement),WINDOW_CONFIG.windows.pop(),WINDOW_CONFIG.codeWindow.pop(),WINDOW_CONFIG.current--)}),document.querySelectorAll(".generate-url").forEach(btn=>{btn.addEventListener("click",()=>{const btn_type=btn.getAttribute("data-type");WINDOW_CONFIG.windows.forEach((window,index)=>WINDOW_CONFIG.windows_value[index]=window.value),lzma.compress(JSON.stringify(WINDOW_CONFIG.windows_value),1,(compressed,error)=>{if(error)return void alert("Failed to compress data: "+error);let reader=new FileReader;reader.onload=function(){let base64=reader.result.substr(reader.result.indexOf(",")+1),url="https://"+ROOT_url.host+ROOT_url.pathname+"#"+base64;var result="markdown"===btn_type?"[paste]("+url+")":url;navigator.clipboard.writeText(result),document.querySelector(".nav-text-offer input").value=result,document.querySelector("body > footer").classList.add("text-offer")},reader.readAsDataURL(new Blob([new Uint8Array(compressed)]))})})}),document.querySelector("a.cancel-url").addEventListener("click",closeOffer),document.querySelector("a.copy-url").addEventListener("click",()=>{var input;document.querySelector(".nav-text-offer input").select(),document.execCommand("copy"),closeOffer()})};fn=async()=>{let base64=location.hash.substring(1);if(0==base64.length||"undefined"==base64||!fetch)return void __main__();let r=await fetch("data:application/octet-stream;base64,"+base64),blob=await r.blob(),reader=new FileReader;reader.onload=function(){var compressed_data=Array.from(new Uint8Array(reader.result));lzma.decompress(compressed_data,(function(plaintext,error){error&&alert("Failed to decompress data: "+error);try{const arrayData=JSON.parse(plaintext);"object"==typeof arrayData&&arrayData.forEach((el,i)=>{addWindow(),WINDOW_CONFIG.windows[i].value=el,_update_code(WINDOW_CONFIG.windows[i])})}catch(error){alert("Failed to writing data: "+error)}__main__()}))},reader.readAsArrayBuffer(blob)},fn()});